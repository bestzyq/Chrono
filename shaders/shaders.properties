screen = [sky] [shadow]

screen.sky = VANILLA_SUN VANILLA_MOON
screen.shadow = SHADOW_MODE


# uniform
variable.float.view_sun_dir_norm = 1.0 / sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
variable.float.view_sun_dir_x = sunPosition.x * view_sun_dir_norm
variable.float.view_sun_dir_y = sunPosition.y * view_sun_dir_norm
variable.float.view_sun_dir_z = sunPosition.z * view_sun_dir_norm
uniform.vec3.view_sun_dir = vec3(view_sun_dir_x, view_sun_dir_y, view_sun_dir_z)

variable.float.sun_dir_x = gbufferModelViewInverse.0.0 * view_sun_dir_x + gbufferModelViewInverse.1.0 * view_sun_dir_y + gbufferModelViewInverse.2.0 * view_sun_dir_z
variable.float.sun_dir_y = gbufferModelViewInverse.0.1 * view_sun_dir_x + gbufferModelViewInverse.1.1 * view_sun_dir_y + gbufferModelViewInverse.2.1 * view_sun_dir_z
variable.float.sun_dir_z = gbufferModelViewInverse.0.2 * view_sun_dir_x + gbufferModelViewInverse.1.2 * view_sun_dir_y + gbufferModelViewInverse.2.2 * view_sun_dir_z
uniform.vec3.sun_dir = vec3(sun_dir_x, sun_dir_y, sun_dir_z)

variable.float.view_moon_dir_norm = 1.0 / sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
variable.float.view_moon_dir_x = moonPosition.x * view_moon_dir_norm
variable.float.view_moon_dir_y = moonPosition.y * view_moon_dir_norm
variable.float.view_moon_dir_z = moonPosition.z * view_moon_dir_norm
uniform.vec3.view_moon_dir = vec3(view_moon_dir_x, view_moon_dir_y, view_moon_dir_z)

variable.float.moon_dir_x = gbufferModelViewInverse.0.0 * view_moon_dir_x + gbufferModelViewInverse.1.0 * view_moon_dir_y + gbufferModelViewInverse.2.0 * view_moon_dir_z
variable.float.moon_dir_y = gbufferModelViewInverse.0.1 * view_moon_dir_x + gbufferModelViewInverse.1.1 * view_moon_dir_y + gbufferModelViewInverse.2.1 * view_moon_dir_z
variable.float.moon_dir_z = gbufferModelViewInverse.0.2 * view_moon_dir_x + gbufferModelViewInverse.1.2 * view_moon_dir_y + gbufferModelViewInverse.2.2 * view_moon_dir_z
uniform.vec3.moon_dir = vec3(moon_dir_x, moon_dir_y, moon_dir_z)

variable.float.view_light_dir_x = if(sunAngle < 0.5, view_sun_dir_x, view_moon_dir_x)
variable.float.view_light_dir_y = if(sunAngle < 0.5, view_sun_dir_y, view_moon_dir_y)
variable.float.view_light_dir_z = if(sunAngle < 0.5, view_sun_dir_z, view_moon_dir_z)
uniform.vec3.view_light_dir = vec3(view_light_dir_x, view_light_dir_y, view_light_dir_z)

variable.float.light_dir_x = if(sunAngle < 0.5, sun_dir_x, moon_dir_x)
variable.float.light_dir_y = if(sunAngle < 0.5, sun_dir_y, moon_dir_y)
variable.float.light_dir_z = if(sunAngle < 0.5, sun_dir_z, moon_dir_z)
uniform.vec3.light_dir = vec3(light_dir_x, light_dir_y, light_dir_z)
